#!/usr/bin/env python3
# -*- coding: utf-8 -*-
from flask import Flask
''' Экземпляр этого класса будет нашим WSGI приложением. Первым аргументом является имя модуля приложения. Если вы используете один модуль (как в данном примере), вы должны использовать __name__, потому что в зависимости от того, было ли это начато как приложение или как импорт модуля, название будет другим ('__main__' по сравнению с реальным именем импорта).
'''
app = Flask(__name__)
'''Далее мы создаем экземпляр этого класса. Мы передаем ему имя модуля или пакета. Это необходимо, так как Flask не знает, где искать шаблоны, статические файлы, и так далее.
'''
@app.route('/hello/<user>')# Затем мы используем route(). Декоратор говорит Flask, что URL должен вызывать нашу функцию.
def hello_world(user):#Функция задает имя, которое также используется для создания URL-адресов для этой функции, и возвращает сообщение, что мы хотим отобразить в браузере пользователя.
    return 'Hello, %s' % user
@app.route('/index/')
def index():
    return 'index'

if __name__ == "__main__":
    app.run()
'''
Наконец, мы используем run() функцию для запуска локального сервера с нашим приложением. Условие __name__ == «__main__» означает, что сервер работает только в том случае, если скрипт выполняется непосредственно из Python интерпретатора и не используется в качестве импортированного модуля.
'''
